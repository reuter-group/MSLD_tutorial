* Lame Title - run with openMM
*

set fnex = 5.5
set box = 43.8640553
set builddir = prep

set resid1 = 13
set s1seq1 = 0 ! s
set s1seq2 = a
set segid1 = PROA
set segid = PROA


set nterdel_proa = 0 ! 0 means don't do it
set nterres_proa = 1
set ntercap_proa = nter
set nterc_proa = 2 ! 2 nter, 3 cter, 4 ace, 5 ct3
set cterdel_proa = 0 ! 0 means don't do it
set cterres_proa = 20
set ctercap_proa = cter
set cterc_proa = 3  ! 2 nter, 3 cter, 4 ace, 5 ct3

set bomlev = ?bomlev
bomlev -1
read rtf card name prep/toppar/top_all36_prot.rtf
read param card flex name prep/toppar/par_all36m_prot.prm
read rtf card append name "prep/toppar/top_all36_cgenff.rtf"
read param card flex append name "prep/toppar/par_all36_cgenff.prm"
stream "prep/toppar/toppar_water_ions.str"
bomlev @bomlev

stream prep/aa_stream/msldpatch.str

!!!!!!!!!!!! protein setup !!!!!!!!!!!!!!!!!!!

read psf card name prep/peptide.psf
read coor card name prep/peptide.crd

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

bomlev -2

set procount = 0

set ii = 1
label patchsiteloop
if @ii .le. @nsites then

   set segid = @segid@@ii
   set resid = @resid@@ii
   ! calc residminus2 = @resid - 2
   ! calc residminus1 = @resid - 1
   ! calc residplus1 = @resid + 1
   define test select segid @segid .and. resid @resid end
   set iresid = ?selires
   calc iresidminus2 = @iresid - 2
   calc iresidminus1 = @iresid - 1
   calc iresidplus1 = @iresid + 1
   define test select segid @segid .and. ires @iresidminus2 end
   set residminus2 = ?selresi
   define test select segid @segid .and. ires @iresidminus1 end
   set residminus1 = ?selresi
   define test select segid @segid .and. ires @iresidplus1 end
   set residplus1 = ?selresi
   calc iiminus2 = @ii - 2
   calc iiminus1 = @ii - 1

   ! determine proline in current position
   define testpro select segid @segid .and. resid @resid .and. resname PRO end
   if ?nsel .gt. 0 then
      calc procount = @procount + 1
   endif
   ! determine proline in residplus1 position
   define testpro select segid @segid .and. resid @residplus1 .and. resname PRO end
   set ptag = 0
   if ?nsel .gt. 0 then
      set ptag = 1
   endif

   set jj = 2
   label patchloop
   if @jj .le. @nsubs@@ii then

      set seqjj = @{s@@{ii}seq@@jj}
      patch aa_@{seqjj} @segid @resid@@ii setup warn ! setup for IC table

      if @{seqjj} .eq. p then
         calc procount = @procount + 1
      endif

      if @ii .eq. @{nterdel_@@segid} then
         ! delete connectivity, not just bond
         dele conn sele ( atom @segid @residminus1 C ) show end -
            sele ( atom @segid @resid@@ii N@{seqjj}_A ) show end
         patch cap_@{seqjj}@{nterc_@@segid} @segid @resid@@ii setup ! setup for IC table
      endif
      if @resid .eq. @{nterres_@@segid} then
         patch cap_@{seqjj}@{nterc_@@segid} @segid @resid@@ii setup ! setup for IC table
      endif
      if @ii .eq. @{cterdel_@@segid} then
         ! delete connectivity, not just bond
         dele conn sele ( atom @segid @resid@@ii C@{seqjj}_B ) show end -
            sele ( atom @segid @residplus1 N ) show end
         patch cap_@{seqjj}@{cterc_@@segid} @segid @resid@@ii setup ! setup for IC table
      endif
      if @resid .eq. @{cterres_@@segid} then
         patch cap_@{seqjj}@{cterc_@@segid} @segid @resid@@ii setup ! setup for IC table
      endif

      ! add links
      if @residminus1 .gt. @{nterres_@@segid} then
         patch l_00@{seqjj} @segid @residminus1 ! setup
      endif
      if @residminus1 .eq. @{nterres_@@segid} then
         patch l_@{nterc_@@segid}0@{seqjj} @segid @residminus1 ! setup
      endif
      if @residplus1 .lt. @{cterres_@@segid} then
         patch l_@{seqjj}@{ptag}0 @segid @residplus1 ! setup
      endif
      if @residplus1 .eq. @{cterres_@@segid} then
         patch l_@{seqjj}@{ptag}@{cterc_@@segid} @segid @residplus1 ! setup
      endif

      ! add pairwise links
      if @ii .gt. 1 then
         if @resid@@iiminus1 .eq. @residminus1 then
            set kk = 2
            label linkloop1
            if @kk .le. @nsubs@@iiminus1 then
               set seqkk = @{s@@{iiminus1}seq@@kk}
               if @residminus1 .eq. @{nterres_@@segid} then
                  patch l_@{nterc_@@segid}@{seqkk}@{seqjj} @segid @residminus1
               else
                  if @{nterdel_@@segid} .eq. @iiminus1 then
                     patch l_@{nterc_@@segid}@{seqkk}@{seqjj} @segid @residminus1
                  else
                     patch l_0@{seqkk}@{seqjj} @segid @residminus1
                  endif
               endif
               if @residplus1 .eq. @{cterres_@@segid} then
                  patch l_@{seqkk}@{seqjj}@{cterc_@@segid} @segid @resid
               else
                  if @{cterdel_@@segid} .eq. @ii then
                     patch l_@{seqkk}@{seqjj}@{cterc_@@segid} @segid @resid
                  else
                     patch l_@{seqkk}@{seqjj}0 @segid @resid
                  endif
               endif
               calc kk = @kk + 1
               goto linkloop1
            endif
         endif
         if @resid@@iiminus1 .eq. @residminus2 then
            set kk = 2
            label linkloop2
            if @kk .le. @nsubs@@iiminus1 then
               set seqkk = @{s@@{iiminus1}seq@@kk}
               patch l_@{seqkk}0@{seqjj} @segid @residminus1
               calc kk = @kk + 1
               goto linkloop2
            endif
         endif
      endif

      ! add three-way links
      if @ii .gt. 2 then
         if @resid@@iiminus1 .eq. @residminus1 then
            if @resid@@iiminus2 .eq. @residminus2 then
               set ll = 2
               label linkloop3
               if @ll .le. @nsubs@@iiminus2 then
                  set seqll = @{s@@{iiminus2}seq@@ll}
                  patch l_@{seqll}0@{seqjj} @segid @residminus1
                  set kk = 2
                  label linkloop4
                  if @kk .le. @nsubs@@iiminus1 then
                     set seqkk = @{s@@{iiminus1}seq@@kk}
                     patch l_@{seqll}@{seqkk}@{seqjj} @segid @residminus1
                     calc kk = @kk + 1
                     goto linkloop4
                  endif
                  calc ll = @ll + 1
                  goto linkloop3
               endif
            endif
         endif
      endif

      ! Copy backbone positions and move them slightly to prevent EWEX = NAN
      calc moveit = ( @jj - 1 ) * 0.01
      coor dupl sele atom @segid @resid N end sele atom @segid @resid N@{seqjj}_A end
      scalar Z add @moveit sele atom @segid @resid N@{seqjj}_A end
      coor dupl sele atom @segid @resid CA end sele atom @segid @resid C@{seqjj}_A end
      scalar Z add @moveit sele atom @segid @resid C@{seqjj}_A end
      coor dupl sele atom @segid @resid C end sele atom @segid @resid C@{seqjj}_B end
      scalar Z add @moveit sele atom @segid @resid C@{seqjj}_B end

      calc jj = @jj + 1
      goto patchloop
   endif

   calc ii = @ii + 1
   goto patchsiteloop
endif

read coor card resid name "prep/peptide.crd"
ic param
ic build


set ii = 1
label selesiteloop
if @ii .le. @nsites then
   set segid = @segid@@ii
   set resid = @resid@@ii
   set site = @ii

   define site@{site}suball - 
      select ( -
      segid @segid .and. resid @resid ) show end

   ! Use cats (1) unless site is a terminal residue or terminal deletion
   set site@{ii}cats = 1
   if @resid .eq. @{nterres_@@segid} then
      set site@{ii}cats = 0
   endif
   if @resid .eq. @{cterres_@@segid} then
      set site@{ii}cats = 0
   endif

   ! include residues in a possible terminal deletion
   if @ii .eq. @{nterdel_@@segid} then
      define site@{site}suball -
         select ( -
         segid @segid .and. resid @{nterres_@@segid}:@resid ) show end
      set site@{ii}cats = 0
   endif
   if @ii .eq. @{cterdel_@@segid} then
      define site@{site}suball -
         select ( -
         segid @segid .and. resid @resid:@{cterres_@@segid} ) show end
      set site@{ii}cats = 0
   endif

   define site@{site}sub1 -
      select ( site@{site}suball ) show end

   set jj = 2
   label seleloop
   if @jj .le. @nsubs@@ii then

      set sub = @jj
      set seqjj = @{s@@{ii}seq@@jj}
      stream prep/aa_stream/sele_@{seqjj}.str

      ! account for cap in case of terminal deletion
      if @ii .eq. @{nterdel_@@segid} then
         stream prep/aa_stream/sele_@{seqjj}@{nterc_@@segid}.str
         define site@{site}sub@{sub} select ( site@{site}sub@{sub} .or. site@{site}cap@{sub} ) show end
      endif
      if @resid .eq. @{nterres_@@segid} then
         stream prep/aa_stream/sele_@{seqjj}@{nterc_@@segid}.str
         define site@{site}sub@{sub} select ( site@{site}sub@{sub} .or. site@{site}cap@{sub} ) show end
      endif
      if @ii .eq. @{cterdel_@@segid} then
         stream prep/aa_stream/sele_@{seqjj}@{cterc_@@segid}.str
         define site@{site}sub@{sub} select ( site@{site}sub@{sub} .or. site@{site}cap@{sub} ) show end
      endif
      if @resid .eq. @{cterres_@@segid} then
         stream prep/aa_stream/sele_@{seqjj}@{cterc_@@segid}.str
         define site@{site}sub@{sub} select ( site@{site}sub@{sub} .or. site@{site}cap@{sub} ) show end
      endif

      define site@{site}sub1 -
         select ( -
         site@{site}sub1 .and. .not. site@{site}sub@{sub} ) show end

      calc jj = @jj + 1
      goto seleloop
   endif

   calc ii = @ii + 1
   goto selesiteloop
endif


auto angle dihe
bomlev -1


set ii = 1
label deletesiteloop
if @ii .le. @nsites then
   set segid = @segid@@ii
   set resid = @resid@@ii

   set jj = 1
   label delete1loop
   if @jj .le. @nsubs@@ii then

      calc kk = @jj + 1
      label delete2loop
      if @kk .le. @nsubs@@ii then

         dele angle sele ( site@{ii}sub@{jj} ) show end sele ( site@{ii}sub@{kk} ) show end
         dele dihe  sele ( site@{ii}sub@{jj} ) show end sele ( site@{ii}sub@{kk} ) show end
         dele impr  sele ( site@{ii}sub@{jj} ) show end sele ( site@{ii}sub@{kk} ) show end

         calc kk = @kk + 1
         goto delete2loop
      endif

      calc jj = @jj + 1
      goto delete1loop
   endif

   calc ii = @ii + 1
   goto deletesiteloop
endif

!! !! Load solvent
read psf card name prep/solvent.psf append
read coor card name prep/solvent.crd append

!! !! Load ions
read psf card name prep/ions.psf append
read coor card name prep/ions.crd append

print coor sele .not. init end

write psf card name patch.psf
* after patching psf
*
! write coor pdb name patch.pdb
! * after patching pdb
! *
write coor card name patch.crd
* after patching crd
*

! Make sure all atoms have coordinates
PRINt COORdinate SELEct .NOT. INITialized END


! MODIFY to set up periodic images or SBC
coor stat
crystal define cubic @box @box @box 90 90 90   !! Need to use CRYSTAL in repdstr
crystal build cutoff 15 nope 0
image byseg xcen 0 ycen 0 zcen 0 sele .not. ( resn TIP3 .or. segid IONS .or. resname POT .or. resname CL ) end
image byres xcen 0 ycen 0 zcen 0 sele resn TIP3 .or. segid IONS .or. resname POT .or. resname CL end


calc blockplusone = @nblocks + 1
BLOCK @blockplusone
   clear
END

if @nreps .eq. 1 then
BLOCK @blockplusone
else
BLOCK @blockplusone NREP @nreps
endif
   ! Call 2 sele site@{resid1}sub@{s1seq1} end
   ! Call 3 sele site@{resid1}sub@{s1seq2} end
   ! Call 4 sele site@{resid1}sub@{s1seq3} end
scat on
scat k 118.4

set prevblock = 0
set ii = 1
label callsiteloop
if @ii .le. @nsites then
   set jj = 1
   label callloop
   if @jj .le. @nsubs@@ii then
      calc jp1 = @jj + 1 + @prevblock

      Call @jp1 sele site@{ii}sub@{jj} end

      calc jj = @jj + 1
      goto callloop
   endif
   calc prevblock = @prevblock + @nsubs@@{ii}
   calc ii = @ii + 1
   goto callsiteloop
endif
   qldm theta
   lang temp @temp
if @nreps .eq. 1 then
   ldin 1 1.0  0.0  5.0  0.0  5.0
else
   phmd 7.0
   ldin 1 1.0  0.0  5.0  0.0  5.0  fix 7.0
endif
   ! ldin 2 0.995 0.0  5.0  @lams1s1 5.0  fix 7.0
   ! ldin 3 0.001 0.0  5.0  @lams1s2 5.0  fix 7.0
   ! ldin 4 0.001 0.0  5.0  @lams1s3 5.0  fix 7.0
set blockassign = 0
set nbiaspot = 0
set prevblock = 0
set ii = 1
label ldinsiteloop
if @ii .le. @nsites then
   calc lambda0 = 1.001 - 0.001 * @nsubs@@{ii}
   calc nbiaspot = @nbiaspot + 5 * ( @nsubs@@{ii} * ( @nsubs@@{ii} - 1 ) ) / 2
   set jj = 1
   label ldinloop
   if @jj .le. @nsubs@@ii then
      calc jp1 = @jj + 1 + @prevblock

if @nreps .eq. 1 then
      ldin @jp1 @lambda0 0.0  5.0  @lams@@{ii}s@@{jj} 5.0
else
      ldin @jp1 @lambda0 0.0  5.0  @lams@@{ii}s@@{jj} 5.0  fix 7.0
endif

      set lambda0 = 0.001
      set blockassign = @blockassign @ii
      calc jj = @jj + 1
      goto ldinloop
   endif
   calc prevblock = @prevblock + @nsubs@@{ii}
   calc ii = @ii + 1
   goto ldinsiteloop
endif
   ! set excl1 = 2 3 2 4 3 4
   ! excl @excl1
   rmla bond thet impr 
   ! msld 0  1  1  1  fnex @fnex
   msld @blockassign fnex @fnex
   msma

set ii = 1
label catssiteloop
if @ii .le. @nsites then
   set site = @ii
   set resid = @resid@@ii
   set segid = @segid@@ii

   define testgly select atom @segid @resid HA2 end
   set HA = HA
   if ?nsel .eq. 1 then
      set HA = HA2
   endif

   if @{site@@{ii}cats} .eq. 0 then
      echo "No CATS restraint at site @II"
   else
      cats sele atom @segid @resid N .or. atom @segid @resid N%_A end
      cats sele atom @segid @resid CA .or. atom @segid @resid C%_A end
      cats sele atom @segid @resid @HA .or. atom @segid @resid H%_B end
      cats sele atom @segid @resid C .or. atom @segid @resid C%_B end
      cats sele atom @segid @resid O .or. atom @segid @resid O%_A end
   endif
   calc ii = @ii + 1
   goto catssiteloop
endif

   soft w14
   pmel ex

   ! Check block.doc for functional form of these biasing potentials
   calc nbiaspot = 5 * ( @nblocks * ( @nblocks - 1 ) ) / 2
   ldbi @nbiaspot
set ibias = 1
set iblock = 0
set si = 1
label loop5
if @si .le. @nsites then
   set jblock = @iblock
   set sj = @si
   label loop5b
   if @sj .le. @nsites then
      set ii = 1
      label loop6
      if @ii .le. @nsubs@@{si} then
         calc ip1 = @ii + 1 + @iblock
         set jj = 1
         if @si .eq. @sj then
            calc jj = @ii + 1
         endif
         label loop7
         if @jj .le. @nsubs@@{sj} then
            calc jp1 = @jj + 1 + @jblock
            if @si .eq. @sj then
               adex @ip1 @jp1
            endif

            ldbv @ibias @ip1 @jp1 6 0.0 @cs@@{si}s@@{ii}s@@{sj}s@@{jj} 0
            calc ibias = @ibias + 1
            ldbv @ibias @ip1 @jp1 10 -5.56 @xs@@{si}s@@{ii}s@@{sj}s@@{jj} 0
            calc ibias = @ibias + 1
            ldbv @ibias @ip1 @jp1 8 0.017 @ss@@{si}s@@{ii}s@@{sj}s@@{jj} 0
            calc ibias = @ibias + 1
            ldbv @ibias @jp1 @ip1 10 -5.56 @xs@@{sj}s@@{jj}s@@{si}s@@{ii} 0
            calc ibias = @ibias + 1
            ldbv @ibias @jp1 @ip1 8 0.017 @ss@@{sj}s@@{jj}s@@{si}s@@{ii} 0
            calc ibias = @ibias + 1
            calc jj = @jj + 1
            goto loop7
         endif
         calc ii = @ii + 1
         goto loop6
      endif
      calc jblock = @jblock + @nsubs@@{sj}
      calc sj = @sj + 1
      goto loop5b
   endif
   calc iblock = @iblock + @nsubs@@{si}
   calc si = @si + 1
   goto loop5
endif

! nsob 1
! sobo 1 2.0 sele atom @segid @resid1 NP_A end sele atom @segid @resid1 CP_C end
nsob @procount LEXP 2.0 RALF -1.0
set isobo = 1
set ii = 1
label softsiteloop
if @ii .le. @nsites then
   define testpro select segid @segid .and. resid @resid@@ii .and. resname PRO end
   if ?nsel .gt. 0 then
      sobo @isobo sele atom @segid @resid@@ii CB end sele atom @segid @resid@@ii CG end
      calc isobo = @isobo + 1
   endif
   set jj = 2
   label softloop
   if @jj .le. @nsubs@@ii then
      if @{s@@{ii}seq@@jj} .eq. p then
         sobo @isobo sele atom @segid @resid@@ii CP_C end sele atom @segid @resid@@ii CP_D end
         calc isobo = @isobo + 1
      endif
      calc jj = @jj + 1
      goto softloop
   endif
   calc ii = @ii + 1
   goto softsiteloop
endif

END

